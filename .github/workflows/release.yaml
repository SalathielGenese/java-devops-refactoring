name: Release Executable

on:
  push:
    tags:
    - 'v*.*.*'
    branches:
    - main

jobs:
  release:
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          target: linux-amd64
          suffix: ''
#        - os: ubuntu-arm64
#          target: linux-arm64
#          suffix: ''
        - os: macos-latest
          target: macos-x86_64
          suffix: ''
        - os: macos-latest
          target: macos-arm64
          suffix: ''
        - os: windows-latest
          target: windows-x86_64
          suffix: '.exe'
        - os: windows-latest
          target: windows-arm64
          suffix: '.exe'

    permissions:
      contents: write
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: '23'
        distribution: 'graalvm'
        native-image-job-reports: 'true'

    - name: Build native executable
      shell: bash
      run: |
        TAG="${GITHUB_REF#refs/tags/}"
        SEMVER_REGEX='^v?(\d+)\.(\d+)\.(\d+)(-[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*)(\+([a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*))?$'
        if [[ ! "$TAG" =~ $SEMVER_REGEX ]]; then
          echo "Error: Tag $TAG does not match the semantic versioning format!"
          exit 1
        fi
        
        ARCH_FLAGS=""
        case "${{ matrix.target }}" in
          "macos-arm64")
            ARCH_FLAGS="-H:CPUFeatures=ARM64 --target=aarch64-darwin"
            ;;
          "windows-arm64")
            ARCH_FLAGS="-H:CPUFeatures=ARM64 -H:+SpawnIsolates"
            ;;
          "linux-arm64")  # Corrected to `aarch64-linux` for Linux ARM64
            ARCH_FLAGS="-H:CPUFeatures=ARM64 --target=aarch64-linux"  # Fixed flag for Linux ARM64
            ;;
        esac

        mvn clean package -Pnative -pl console -am -Dgraalvm.native.image.options="$ARCH_FLAGS"

        # VERSION="$(git rev-parse --short HEAD)" # This works with push trigger
        VERSION="${GITHUB_REF#refs/tags/v}"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        mv ./console/target/java-devops-refactoring-console \
           ./console/target/java-devops-refactoring-console-$VERSION-${{ matrix.target }}${{ matrix.suffix }}

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ./console/target/java-devops-refactoring-console-${{ env.VERSION }}-*
        tag_name: ${{ env.VERSION }}
        generate_release_notes: true
        prerelease: false
        draft: false
